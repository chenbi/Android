/*
 * Androidman.java
 *
 * Created on 30. Juli 2008, 16:18
 */



import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.media.opengl.GLCapabilities;
import javax.media.opengl.GLJPanel;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JSlider;
import javax.swing.JToggleButton;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.WindowConstants;
import javax.swing.border.BevelBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class Androidman extends JFrame implements Runnable
{

        // construct
    GLRenderer glr;
    // keep these across threads
    static boolean isRunning=false;
    static GLJPanel thePanel=null;
    

    /** Creates new form MainFrame */
    public Androidman() {
        initComponents();
        setTitle("AndroidMan");
        glr=new GLRenderer();
        panel.addGLEventListener(glr);
        if(thePanel==null)
            thePanel=panel;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        JLabel label = new JLabel();
        panel = new GLJPanel(createGLCapabilites());
        jToggleButtonTalk = new JToggleButton();
        jToggleButtonWalk = new JToggleButton();
        jSlider1 = new JSlider();
        jSlider2 = new JSlider();
        jButton1 = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        label.setFont(new Font("Tahoma", 0, 24)); // NOI18N
        label.setHorizontalAlignment(SwingConstants.CENTER);
        label.setText("The Android Man"); // NOI18N

        panel.setBorder(BorderFactory.createBevelBorder(BevelBorder.RAISED));

        GroupLayout panelLayout = new GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );

        jToggleButtonTalk.setText("Talk");
        jToggleButtonTalk.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jToggleButtonTalkActionPerformed(evt);
            }
        });

        jToggleButtonWalk.setText("Walk");
        jToggleButtonWalk.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jToggleButtonWalkActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(360);
        jSlider1.setValue(0);
        jSlider1.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jSlider2.setMaximum(360);
        jSlider2.setOrientation(JSlider.VERTICAL);
        jSlider2.setValue(0);
        jSlider2.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });

        jButton1.setText("Reset");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jToggleButtonTalk)
                    .addComponent(jButton1)
                    .addComponent(jToggleButtonWalk))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addComponent(jSlider1, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                    .addComponent(panel, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label, GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jSlider2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(label)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButtonTalk)
                        .addPreferredGap(ComponentPlacement.UNRELATED)
                        .addComponent(jToggleButtonWalk)
                        .addPreferredGap(ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(94, 94, 94))
                    .addGroup(layout.createParallelGroup(Alignment.TRAILING, false)
                        .addComponent(jSlider2, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(panel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(jSlider1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButtonTalkActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jToggleButtonTalkActionPerformed
        // TODO add your handling code here:
        if(jToggleButtonTalk.isSelected())
        {
            glr.doTalk(true);
            isRunning=true;
            new Thread(new Androidman()).start();
        }
        else 
        {
             glr.doTalk(false);
             if(!jToggleButtonWalk.isSelected())
                 isRunning=false;
        }
    }//GEN-LAST:event_jToggleButtonTalkActionPerformed

    private void jToggleButtonWalkActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jToggleButtonWalkActionPerformed
        // TODO add your handling code here:
        if(jToggleButtonWalk.isSelected())
        {
            glr.doWalk(true);
            isRunning=true;
            new Thread(new Androidman()).start();
        }
        else 
        {
             glr.doWalk(false);
             if(!jToggleButtonTalk.isSelected())
                 isRunning=false;
        }
    }//GEN-LAST:event_jToggleButtonWalkActionPerformed

    private void jSlider2StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        // TODO add your handling code here:        
        glr.setBasicRotation(jSlider1.getValue(),jSlider2.getValue());
        if(!isRunning)
            panel.display();        
    }//GEN-LAST:event_jSlider2StateChanged

    private void jSlider1StateChanged(ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        glr.setBasicRotation(jSlider1.getValue(),jSlider2.getValue());
        if(!isRunning)
            panel.display();        
    }//GEN-LAST:event_jSlider1StateChanged

    private void jButton1ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jSlider1.setValue(0);
        jSlider2.setValue(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Called from within initComponents().
     * hint: to customize the generated code choose 'Customize Code' in the contextmenu
     * of the selected UI Component you wish to cutomize in design mode.
     * @return Returns customized GLCapabilities.
     */
    private GLCapabilities createGLCapabilites() {
        
        GLCapabilities capabilities = new GLCapabilities();
        capabilities.setHardwareAccelerated(true);

        // try to enable 2x anti aliasing - should be supported on most hardware
        capabilities.setNumSamples(2);
        capabilities.setSampleBuffers(true);
        
        return capabilities;
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        // Run this in the AWT event thread to prevent deadlocks and race conditions
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                // switch to system l&f for native font rendering etc.
                try{
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                }catch(Exception ex) {
                    Logger.getLogger(getClass().getName()).log(Level.INFO, "can not enable system look and feel", ex);
                }
                
                Androidman frame = new Androidman();
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton jButton1;
    private JSlider jSlider1;
    private JSlider jSlider2;
    private JToggleButton jToggleButtonTalk;
    private JToggleButton jToggleButtonWalk;
    private GLJPanel panel;
    // End of variables declaration//GEN-END:variables

    public void run() {
       while(isRunning)
       {
            try {
                thePanel.display();
                Thread.sleep(100);
            }
            catch (InterruptedException ex)
            {
                System.out.println(ex.getMessage());
            }
       }

    }

}